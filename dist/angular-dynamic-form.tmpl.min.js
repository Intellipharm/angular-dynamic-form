"use strict";!function(){angular.module("AngularDynamicForm",["angular.filter"]),angular.module("AngularDynamicForm").run(["$templateCache",function(a){a.put("views/dynamic-form.html","<h1>DF</h1>")}])}(),function(){var a=function(){this.repo={},this.set=function(a,b){this.repo[a]=b},this.get=function(a,b,c){if(!_.has(this.repo,a)&&!_.isUndefined(b))return b;if(!_.has(this.repo,a))return null;var d=this.repo[a];return c&&delete this.repo[a],d},this.remove=function(a){delete this.repo[a]}};angular.module("AngularDynamicForm").service("DynamicFormStateService",a)}(),function(){var a=function(){this.format={date:{display:"DD-MM-YYYY",mysql:"YYYY-MM-DD"},time:{display:"HH:mm:SS",mysql:"HH:mm:SS"}},this.slugify=function(a,b,c){return _.isUndefined(c)&&(c="-"),_.isString(a)?(b?(a=a.replace(/^[A-Z]/,function(a){return a.toLowerCase()}),a=a.replace(/[A-Z]/g,function(a){return c+a.toLowerCase()})):a=a.toLowerCase(),a=a.replace(/\s+/g,c),a=a.replace(/\.+/g,c)):a="","-"===c&&(a=a.replace(/(\-{2})/g,c)),"_"===c&&(a=a.replace(/(\_{2})/g,c)),a},this.deslugify=function(a){return a.toLowerCase().replace(/[\.\-]+/g," ").replace(/(?:^|\s)\w/g,function(a){return a.toUpperCase()}).replace(/\s+/g,"")},this.formatDateForDisplay=function(a){var b;return _.isUndefined(a)||_.isNull(a)?void 0:(_.isString(a)?(b=moment(a,this.format.date.mysql),b.isValid()||(b=moment(a,this.format.date.display))):b=moment(a),b.format(this.format.date.display))},this.formatDateForMySQL=function(a){var b;return _.isUndefined(a)||_.isNull(a)?void 0:(_.isString(a)?(b=moment(a,this.format.date.display),b.isValid()||(b=moment(a,this.format.date.mysql))):b=moment(a),b.format(this.format.date.mysql))},this.formatTimeForDisplay=function(a){var b;return _.isUndefined(a)||_.isNull(a)?void 0:(_.isString(a)?(b=moment(a,this.format.time.mysql),b.isValid()||(b=moment(a,this.format.time.display))):b=moment(a),b.format(this.format.time.display))},this.formatTimeForMySQL=function(a){var b;return _.isUndefined(a)||_.isNull(a)?void 0:(_.isString(a)?(b=moment(a,this.format.time.display),b.isValid()||(b=moment(a,this.format.time.mysql))):b=moment(a),b.format(this.format.time.mysql))},this.formatMultiSelectForDisplay=function(a,b){var c=[];return _.forEach(a.options,function(a){_.has(b,a.value)&&b[a.value]===!0&&c.push(a.value)}),c},this.formatMultiSelectForMySQL=function(a,b,c){_.forEach(a.options,function(a){_.has(b,a.value)&&(b[a.value]=_.includes(b[c],a.value)?!0:!1)}),delete b[c]},this.formatDecimalForMySQL=function(a){return _.isUndefined(a)?void 0:parseFloat(a).toFixed(2)}};angular.module("AngularDynamicForm").constant("DynamicFormUtilLib",new a)}(),angular.module("AngularDynamicForm").run(["$templateCache",function(a){a.put("lib/views/dynamic-form-fieldset.html",'<fieldset class="form-group" ng-class="{\n\'has-feedback\': has_validation_feedback,\n\'has-success\': errors.length === 0 && show_validation && edit_state,\n\'has-error\': errors.length > 0 && show_validation && edit_state,\n\'required\': field.validate}">\n\n    <div class="row">\n\n        <div class="col-xs-12">\n\n            <div class="row">\n\n                <label ng-if="field.label !== \'\' && show_label" for="{{field.name}}" class="control-label col-sm-3">{{field.label}}</label>\n\n                <!-- edit state -->\n\n                <div ng-show="edit_state" class="input-box"\n                     ng-switch="field.type"\n                     ng-class="{\'col-sm-9\': show_label, \'col-sm-12\': !show_label}">\n\n\n\n                    <!-- text -->\n                    <input ng-switch-when="text" type="text" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                           ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n\n                    <!-- textarea -->\n                    <textarea ng-switch-when="textarea" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                              ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus"></textarea>\n\n                    <!-- username -->\n                    <div ng-switch-when="username">\n                        <input type="text" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                               ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                    </div>\n\n                    <!-- password || password strength -->\n                    <div ng-switch-when="password">\n                        <input type="password" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                               ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                    </div>\n                    <div ng-switch-when="password-strength">\n                        <input type="password" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                               ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                    </div>\n\n                    <!-- currency -->\n                    <div ng-switch-when="currency" class="input-group">\n                        <div class="input-group-addon">$</div>\n                        <input type="text" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                               ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                    </div>\n\n                    <!-- email -->\n                    <div ng-switch-when="email">\n                        <input type="email" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                        <input type="email" id="{{field.name}}" class="form-control" placeholder="{{field.label}}"\n                               ng-model="model[field.name]" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                    </div>\n\n                    <!-- model-search-select -->\n                    <div ng-switch-when="model-search-select" class="input-group">\n\n                        <auto-complete-search\n                        query="field.query"\n                        ar-model="field.model"\n                        fields="name"\n                        limit="5"\n                        delay="200"\n                        display-field="name"\n                        on-select="ctrl.onModelSearchSelectSelect(data, partial)">\n                        </auto-complete-search>\n\n                        <br/>\n\n                        <ul style="list-style: disc;">\n                            <li style="margin-left: 20px;" ng-repeat="item in model[field.name]">{{item.name}}</li>\n                        </ul>\n\n                    </div>\n\n                    <!-- advanced-data-selector -->\n\n                    <advanced-data-selector ng-switch-when="data-selector"\n                                            field="field" model="model"></advanced-data-selector>\n\n                    <!-- select -->\n                    <select ng-switch-when="select" class="form-control"\n                            ng-model="model[field.name]" ng-options="option.value as option.label for option in field.options"\n                            ng-change="ctrl.onChange()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                        <option value="" disabled>Please select</option>\n                    </select>\n\n                    <!-- multi-select -->\n                    <select ng-switch-when="multi-select" class="form-control"\n                            ng-model="model[field.name]" multiple size="8" ng-options="option.value as option.label for option in field.options"\n                            ng-change="ctrl.onChange()" ng-disabled="model.form_field_config[field.name].disabled" ng-autofocus="field.autofocus">\n                    </select>\n\n                    <!-- checkbox -->\n                    <input ng-switch-when="checkbox" type="checkbox"\n                           ng-model="model[field.name]"\n                           ng-change="ctrl.onChange()" ng-disabled="model.form_field_config[field.name].disabled">\n\n                    <!-- checkbox-list -->\n                    <label ng-switch-when="checkbox-list" ng-repeat="option in field.options">\n                        <input type="checkbox" checklist-model="model[field.name]" checklist-value="option.value"> {{option.label}}\n                    </label>\n\n                    <!-- datepicker -->\n                    <input ng-switch-when="datepicker" type="text" class="form-control"\n                           ng-click="datepicker_is_open = true" ng-focus="datepicker_is_open = true"\n                           datepicker-popup="{{datepicker_format}}" ng-model="model[field.name]" is-open="datepicker_is_open" ng-required="true"\n                           close-text="Close" show-button-bar="true" />\n\n                    <!-- timepicker -->\n                    <timepicker ng-switch-when="time" class="timepicker"\n                                ng-model="model[field.name]" hour-step="1" minute-step="10" show-meridian="true"></timepicker>\n\n                    <!-- toggle -->\n                    <slide-toggle ng-switch-when="toggle" ng-model="model[field.name]" on-label="{{field.on}}" off-label="{{field.off}}" size="{{field.size}}"></slide-toggle>\n\n\n                    <!-- validation feedback -->\n                    <span ng-show="has_validation_feedback" class="glyphicon form-control-feedback" ng-class="{\n                                        \'glyphicon-ok\': errors.length === 0 && show_validation,\n                                        \'glyphicon-remove\': errors.length > 0 && show_validation\n                                        }"></span>\n\n                    <!-- indicators -->\n                    <span ng-show="field.required && has_required_indicator" class="control-label required-indicator">*</span>\n\n                    <!-- help text -->\n                    <div ng-show="field.help && has_help_messages" class="control-label help-message">{{field.help}}</div>\n\n                    <!-- password strength -->\n                    <password-strength ng-switch-when="password-strength" password="model[field.name]"></password-strength>\n\n                    <!-- staff member pin -->\n                    <div ng-switch-when="pin">\n                        <input type="hidden" ng-model="model[field.name]">\n                        <span>{{ctrl.new_pin}}</span>\n                        <button class="btn btn-primary" ng-click="ctrl.generateNewPin(field.name, model)">Generate New Pin</button>\n                    </div>\n\n                    <!-- google place -->\n                    <div ng-switch-when="google-place">\n\n                        <div ng-if="ctrl.google_place_manual">\n                            <label for="address1" class="control-label col-sm-3" ng-if="show_label">Address Line 1</label>\n                            <input type="text" id="address1" class="form-control" placeholder="Address Line 1"\n                                   ng-model="model[\'address1\']" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()"\n                                   ng-disabled="model.form_field_config[\'address1\'].disabled" ng-autofocus="field.autofocus">\n\n                            <label for="address2" class="control-label col-sm-3" ng-if="show_label">Address Line 2</label>\n                            <input type="text" id="address2" class="form-control" placeholder="Address Line 2"\n                                   ng-model="model[\'address2\']" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()"\n                                   ng-disabled="model.form_field_config[\'address2\'].disabled" ng-autofocus="field.autofocus">\n\n                            <label for="suburb" class="control-label col-sm-3" ng-if="show_label">Suburb</label>\n                            <input type="text" id="suburb" class="form-control" placeholder="Suburb"\n                                   ng-model="model[\'suburb\']" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()"\n                                   ng-disabled="model.form_field_config[\'suburb\'].disabled" ng-autofocus="field.autofocus">\n\n                            <label for="state" class="control-label col-sm-3" ng-if="show_label">State</label>\n                            <input type="text" id="state" class="form-control" placeholder="State"\n                                   ng-model="model[\'state\']" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()"\n                                   ng-disabled="model.form_field_config[\'state\'].disabled" ng-autofocus="field.autofocus">\n\n                            <label for="postcode" class="control-label col-sm-3" ng-if="show_label">Postcode</label>\n                            <input type="text" id="postcode" class="form-control" placeholder="Postcode"\n                                   ng-model="model[\'postcode\']" ng-change="ctrl.onChange()" ng-blur="ctrl.onBlur()"\n                                   ng-disabled="model.form_field_config[\'postcode\'].disabled" ng-autofocus="field.autofocus">\n\n                            <button class="btn btn-primary" ng-click="ctrl.onGooglePlaceToggle()">Search</button>\n                        </div>\n\n                        <div ng-if="!ctrl.google_place_manual">\n                            <auto-complete-search\n                                ng-show="!ctrl.google_place"\n                                query="field.query"\n                                ar-model="field.model"\n                                limit="5"\n                                delay="200"\n                                display-field="formatted"\n                                placeholder="\'Search for an address\'"\n                                search-field="address"\n                                on-select="ctrl.onGooglePlaceSelect(data, partial)">\n                            </auto-complete-search>\n\n                            <button class=\'btn btn-primary\' ng-show="ctrl.google_place" ng-click="ctrl.onGooglePlaceClick()">\n                                <div ng-if="ctrl.google_place.formatted">\n                                    {{ctrl.google_place.formatted}}\n                                </div>\n                                <div ng-if="!ctrl.google_place.formatted">\n                                    {{model.address1}}<span ng-if="model.address1 && (model.address2 || model.suburb || model.state || model.postcode)">,</span>\n                                    {{model.address2}}<span ng-if="model.address2 && (model.suburb || model.state || model.postcode)">,</span>\n                                    {{model.suburb}}<span ng-if="model.suburb && (model.state || model.postcode)">,</span>\n                                    {{model.state}}<span ng-if="model.state && (model.postcode)">,</span>\n                                    {{model.postcode}}\n                                </div>\n                            </button>\n\n                            <button class="btn btn-primary" ng-click="ctrl.onGooglePlaceToggle()" ng-show="!ctrl.google_place">Enter Manually</button>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- read-only state -->\n\n                <div ng-show="!edit_state" class="col-sm-9 input-box read-only"\n                     ng-switch="field.type">\n\n                    <!-- checkbox-list -->\n                    <ul ng-switch-when="checkbox-list" ng-repeat="option in field.options">\n                        <li ng-repeat="value in model[field.name]" ng-if="value === option.value">{{option.label}}</li>\n                    </ul>\n\n                    <!-- password -->\n                    <div ng-switch-when="password">&nbsp;</div>\n\n                    <!-- default -->\n                    <div ng-switch-default>{{model[field.name]}}</div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class="container-fluid inline-message-container" ng-show="errors.length > 0 && show_validation && edit_state">\n        <div class="row">\n            <div class="col-xs-12 control-label error-message" ng-class="{\'col-sm-offset-3 col-sm-9\': show_label}">\n                {{errors[0]}}\n            </div>\n        </div>\n    </div>\n\n</fieldset>\n'),a.put("lib/views/dynamic-form.html",'<!-- message -->\n<div ng-if="ctrl.form_config.has_messages" class="message-container" move-with-scroll suppress="ctrl.form_config.scroll_message">\n\n    <div ng-messages="ctrl.message_state" class="message">\n        <div class="alert alert-success" role="alert" ng-message="success" ng-if="ctrl.message.success">{{ctrl.message.success}}</div>\n        <div class="alert alert-danger" role="alert" ng-message="error" ng-if="ctrl.message.error">{{ctrl.message.error}}</div>\n    </div>\n</div>\n\n<!-- form -->\n<form role="form" class="form-horizontal" ng-class="{\'has-help-messages\': ctrl.form_config.has_help_messages}">\n\n    <!-- form groups (sections) -->\n    <div ng-if="ctrl.form_config.has_groups"\n         class="panel panel-default form-section"\n         ng-repeat="(key, group) in ctrl.fields | groupBy: \'group_order\'">\n\n        <div class="panel-heading">{{group[0].group_label}}</div>\n        <div class="panel-body">\n\n            <dynamic-form-fieldset class="dynamic-form-fieldset"\n                                   ng-repeat="field in group" field="field" model="model"\n                                   errors="errors[field.name]" show-validation="errors[field.name]"\n                                   edit-state="ctrl.edit_state"\n                                   show-label="ctrl.show_labels"\n                                   has-validation-feedback="ctrl.form_config.has_validation_feedback"\n                                   has-help-messages="ctrl.form_config.has_help_messages"\n                                   has-required-indicator="ctrl.form_config.has_required_indicator"></dynamic-form-fieldset>\n\n        </div><!-- .panel-body -->\n    </div><!-- .panel -->\n\n    <!-- no form groups -->\n\n    <dynamic-form-fieldset ng-if="!ctrl.form_config.has_groups"\n                           ng-repeat="field in ctrl.fields" field="field" model="model"\n                           errors="errors[field.name]" show-validation="errors[field.name]"\n                           edit-state="ctrl.edit_state"\n                           show-label="ctrl.show_labels"\n                           has-validation-feedback="ctrl.form_config.has_validation_feedback"\n                           has-help-messages="ctrl.form_config.has_help_messages"\n                           has-required-indicator="ctrl.form_config.has_required_indicator"></dynamic-form-fieldset>\n\n    <div class="button-outer-container" ng-class="{\'labels\': ctrl.show_labels}">\n        <div class="row">\n            <div class="col-xs-12 dynamic-form-buttons" ng-class="{\'disabled\': ctrl.busy}">\n\n                <div class="row">\n\n                    <!-- spacer for labels -->\n                    <div ng-if="ctrl.show_labels" class="col-sm-3">&nbsp;</div>\n\n                    <!-- button-container -->\n                    <div class="button-container" ng-class="{\'col-sm-9\': ctrl.show_labels, \'col-sm-12\': !ctrl.show_labels}">\n\n                        <button ng-show="ctrl.show_edit_button && !ctrl.edit_state" type="button" class="btn btn-default" ng-click="ctrl.onEdit()">EDIT</button>\n\n                        <div ng-show="ctrl.edit_state">\n                            <button ng-show="ctrl.show_edit_cancel_button" type="button" class="btn btn-default" ng-click="ctrl.onEditCancel()">CANCEL EDIT</button>\n                            <button ng-show="ctrl.show_submit_button" type="submit" class="btn btn-submit btn-block" ng-click="ctrl.onSubmit()">{{ctrl.submit_label}}</button>\n                            <button ng-show="ctrl.show_cancel_button" type="submit" class="btn btn-block" ng-click="ctrl.onCancel()">CANCEL</button>\n                            <button ng-show="ctrl.show_clear_button" type="button" class="btn btn-danger" ng-click="ctrl.onClear()">CLEAR</button>\n                        </div>\n                    </div>\n                </div><!-- /.row -->\n            </div>\n        </div><!-- /.row -->\n    </div>\n</form><!-- /form -->\n\n')}]),function(){angular.module("AngularDynamicForm").constant("DYNAMIC_FORM_EVENTS",{init:"dynamic-form:init",valid:"dynamic-form:valid",invalid:"dynamic-form:invalid",processSuccess:"dynamic-form:process-success",processError:"dynamic-form:process-error",submit:"dynamic-form:submit",forceSubmit:"dynamic-form:force-submit",validate:"dynamic-form:validate"})}(),function(){var a=function(){var a=this;this.validateAllFields=function(b,c){var d=!0,e={},f={};return _.has(b,"validation_rules")&&!_.isEmpty(b.validation_rules)&&angular.extend(f,b.validation_rules),_.isEmpty(c)||angular.extend(f,c),_.isUndefined(f)||_.forEach(b,function(c,g){_.has(f,g)&&(_.has(f[g],"presence")&&!f[g].presence||(e[g]=a.validateField(b,g),e[g].length>0&&(d=!1)))}),{errors:e,is_valid:d}},this.validateField=function(a,b){var c=[];a.clearErrors();var d=a.validate(b);return d||(c=a.$errors[b]),c}};angular.module("AngularDynamicForm").service("DynamicFormService",a)}(),function(){function a(a,b,c){_.forEach(b,function(b,d){_.contains(c,d)||(a[d]=b)})}function b(a,b){_.forEach(a,function(a,c){b[c]=a})}function c(a){var b=a.replace(/\_/g," ");return b=_.map(b.split(" "),function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()}),b.join(" ")}var d=function(d,e,f,g,h,i,j){var k=this;this.init_complete=!1,this.busy=!0,this.edit_state,this.show_edit_button,this.show_submit_button,this.show_edit_cancel_button,this.show_cancel_button,this.show_clear_button,this.message={},this.message_state={success:!1,error:!1},this.fields=[],this.submit_label="SAVE",this.model_backup={},e.errors={},this.form_config={},this.form_config_defaults={is_edit_state:!0,has_groups:!1,show_edit_button:!1,show_submit_button:!0,show_edit_cancel_button:!1,show_cancel_button:!1,show_clear_button:!1,has_required_indicator:!0,has_validation_feedback:!0,has_help_messages:!1,label_replace_underscores:!0,label_camelcase:!1,show_labels:!0,validate:!0,has_messages:!0,process:!0,scroll_message:!0,validate_fields_exclude:[]},this.fields_config={},this.fields_config_defaults={},this.groups_config={},this.groups_config_defaults={},this.init=function(){if(!this.init_complete){this.init_complete=!0,this.fields=[],this.form_config=_.clone(this.form_config_defaults),this.fields_config=_.clone(this.fields_config_defaults),this.groups_config=_.clone(this.groups_config_defaults),angular.extend(this.form_config,e.config),_.isUndefined(this.form_config)||(this.edit_state=this.form_config.is_edit_state,this.has_groups=this.form_config.has_groups,this.show_edit_button=this.form_config.show_edit_button,this.show_submit_button=this.form_config.show_submit_button,this.show_edit_cancel_button=this.form_config.show_edit_cancel_button,this.show_cancel_button=this.form_config.show_cancel_button,this.show_clear_button=this.form_config.show_clear_button,this.show_labels=this.form_config.show_labels,this.has_required_indicator=this.has_required_indicator,this.has_validation_feedback=this.has_validation_feedback,this.has_help_messages=this.has_help_messages,this.label_replace_underscores=this.label_replace_underscores,this.label_camelcase=this.label_camelcase,this.validate=this.validate,this.has_messages=this.has_messages,this.process=this.process,this.validate_fields_exclude=this.validate_fields_exclude,this.scroll_message=this.scroll_message,_.has(this.form_config,"submit_label")&&(this.submit_label=this.form_config.submit_label));var a={};if(_.has(e,"field_config")&&angular.extend(a,e.field_config),_.has(a,"exclude_except")){var b={};_.forEach(e.model,function(c,d){b[d]={},angular.extend(b[d],a[d]),b[d].exclude=!0}),_.forEach(a.exclude_except,function(a){b[a].exclude=!1}),angular.extend(this.fields_config,b)}else _.isEmpty(a)||angular.extend(this.fields_config,a);_.forEach(this.fields_config,function(a,b){var d=_.has(a,"exclude")?a.exclude:!1;if(!d){_.has(e.model,b)||(e.model[b]="");var f={name:b,label:b,model:e.model[b],validate:!1,type:"text"};_.isUndefined(this.form_config)||(_.has(this.form_config,"label_replace_underscores")&&this.form_config.label_replace_underscores===!0&&(f.label=f.label.replace(/\_/g," ")),_.has(this.form_config,"label_camelcase")&&this.form_config.label_camelcase===!0&&(f.label=c(f.label))),!_.isUndefined(this.fields_config)&&_.has(this.fields_config,b)&&angular.extend(f,this.fields_config[b]),this.fields.push(f)}},this);var d={};_.has(e,"groups_config")&&angular.extend(d,e.groups_config),angular.extend(this.groups_config,d),_.isEmpty(this.groups_config)||(_.forEach(this.fields,function(a){var b=1;_.forEach(this.groups_config,function(c){_.forEach(c.fields,function(d,e){d===a.name&&(a.group_label=c.label,_.has(c,"order")&&(b=c.order),a.group_order=b,a.order=e)},this),b++},this)},this),this.fields=_.sortBy(this.fields,"order"),this.form_config.has_groups=!0),this.transformDataBeforeDisplay(e.model,this.fields_config)}this.busy=!1},this.onEdit=function(){_.isEmpty(this.active_record_backup)&&a.call(this,this.active_record_backup,e.model),this.edit_state=!0},this.onEditCancel=function(){_.isEmpty(this.active_record_backup)||b.call(this,this.active_record_backup,e.model),this.edit_state=!1},this.setMessage=function(a,b){var c={valid:"",invalid:"Please complete all required fields",success:"Form successfully submitted",error:"There was an error submitting form"};if(!_.has(c,a))return"";var d="message_"+a,e="success"===a||"valid"===a?"success":"error";if(_.has(k.form_config,d))k.message[e]=k.form_config[d];else if(_.isUndefined(b)){if(_.isEmpty(c[a]))return k.message_state.error=!1,void(k.message_state.success=!1);k.message[e]=c[a]}else k.message[e]=b;"error"===e?(k.message_state.error=!0,k.message_state.success=!1):(k.message_state.error=!1,k.message_state.success=!0),j.set("message",k.message),j.set("message_state",k.message_state)},this.validateForm=function(){return f(function(a,b){return k.message_state.error=!1,k.message_state.success=!1,k.message.error=null,k.message.success=null,k.form_config.validate?(_.has(k.form_config,"validate_fields")||(k.form_config.validate_fields=[]),_.has(k.form_config,"validate_fields_exclude")&&_.forEach(e.model,function(a,b){_.include(k.form_config.validate_fields_exclude,b)||_.include(k.form_config.validate_fields,b)||k.form_config.validate_fields.push(b)}),void e.model.validate(k.form_config.validate_fields).then(function(c){return k.result=c.message,"valid"!==c.message?(_.has(k.form_config,"message_invalid")&&(k.message_state.error=!0,k.message.error=k.form_config.message_invalid),void b(c)):(_.has(k.form_config,"message_valid")&&(k.message_state.success=!0,k.message.success=k.form_config.message_valid),e.errors={},void a(c))},function(a){k.result=a.message,_.has(k.form_config,"message_invalid")&&(k.message_state.error=!0,k.message.error=k.form_config.message_invalid),e.errors=a.data,b(a.data)})):void a()})},this.processForm=function(){return _.isUndefined(e.preSubmit)||e.preSubmit()!==!1?this.saveForm():f(function(a,b){b()})},this.saveForm=function(){return _.isUndefined(e.onSubmit)?f(function(a,b){e.model.save().then(function(b){var c=_.has(b,"data")?b.data.message:void 0;a(c)},function(a){var c=_.has(a,"data")?a.data.message:void 0;b(c)})}):e.onSubmit()},this.transformDataBeforeDisplay=function(a,b){_.forEach(b,function(b,c){_.has(b,"type")&&_.has(a,c)&&!_.isNull(a[c])&&("datepicker"===b.type&&(a[c]=i.formatDateForDisplay(a[c])),"time"===b.type&&(a[c]=i.formatTimeForDisplay(a[c])),"multi-select"===b.type&&_.has(b,"format")&&"map"===b.format&&(a[c]=i.formatMultiSelectForDisplay(b,a)))})},this.transformDataBeforeSubmit=function(a,b){_.forEach(b,function(b,c){_.has(b,"type")&&_.has(a,c)&&!_.isNull(a[c])&&("datepicker"===b.type&&(a[c]=i.formatDateForMySQL(a[c])),"multi-select"===b.type&&_.has(b,"format")&&"map"===b.format&&i.formatMultiSelectForMySQL(b,a,c),"currency"===b.type&&(a[c]=i.formatDecimalForMySQL(a[c]))),_.includes(k.form_config.validate_fields,c)&&_.isUndefined(a[c])&&(a[c]="")})},this.onSubmit=function(){e.submited=!0,this.busy=!0,this.transformDataBeforeSubmit(e.model,this.fields_config),this.validateForm().then(function(){e.model.scope_id=e.$id,e.validated=!0,k.setMessage("valid"),e.$emit(g.valid,e.model),(!_.has(k.form_config,"process")||k.form_config.process)&&k.processForm().then(k.onSubmitSuccess,k.onSubmitError)},function(a){console.log(a),a.scope_id=e.$id,k.setMessage("invalid"),e.$emit(g.invalid,a),k.busy=!1})},this.onSubmitSuccess=function(a){e.processed=!0,k.setMessage("success",a),d.$broadcast(g.processSuccess,a),k.transformDataBeforeDisplay(e.model,k.fields_config),k.busy=!1},this.onSubmitError=function(a){k.setMessage("error",a),d.$broadcast(g.processError,a),k.busy=!1},this.onClear=function(){_.forEach(e.model,function(a,b){var c=!_.isUndefined(this.fields_config)&&_.has(this.fields_config,b)&&_.has(this.fields_config[b],"exclude")&&this.fields_config[b].exclude===!0;_.contains(this.fields_ignore,b)||c||(e.model[b]="")},this)},this.onCancel=function(){_.isUndefined(e.onCancel)||e.onCancel()},e.$on(g.submit,function(a,b){_.has(b,"model")&&b.model!==e.model.model||(1==e.is_active?(e.submitted=!0,k.onSubmit()):e.submitted=!1)}),e.$on(g.forceSubmit,function(a,b){_.has(b,"model")&&b!==e.model||(1==e.is_active?(e.submitted=!0,k.saveForm().then(k.onSubmitSuccess,k.onSubmitError)):e.submitted=!1)}),e.$watch("model",function(a){_.isUndefined(a)||k.init()})};d.$inject=["$rootScope","$scope","$q","DYNAMIC_FORM_EVENTS","DynamicFormService","DynamicFormUtilLib","DynamicFormStateService"],angular.module("AngularDynamicForm").controller("DynamicFormCtrl",d)}(),function(){var a=function(){return{restrict:"E",scope:{form_id:"@formId",config:"=",first:"=",field_config:"=fieldConfig",groups_config:"=groupsConfig",model:"=",error_log:"=errorLog",onSubmit:"&",preSubmit:"&",onCancel:"&",autoSubmit:"="},controller:"DynamicFormCtrl as ctrl",link:function(a,b,c,d){b.addClass("dynamic-form"),d.config=a.config,_.has(c,"onSubmit")||delete a.onSubmit,_.has(c,"preSubmit")||delete a.preSubmit,_.has(c,"onCancel")||delete a.onCancel,a.$watch("first",function(b){a.is_active=!_.isUndefined(b)&&b?!1:!0}),_.isUndefined(a.autoSubmit)||a.$watch("autoSubmit",function(a){!_.isUndefined(a)&&a&&d.onSubmit()}),a.$watch("errors",function(b){_.isUndefined(b)||_.isUndefined(a.error_log)||(a.error_log[a.form_id]=_.has(b,"scope_id")?!0:!1)},!0)},templateUrl:"views/dynamic-form.html"}};a.$inject=[],angular.module("AngularDynamicForm").directive("dynamicForm",a)}(),function(){var a=function(){this.formatDecimal=function(a,b){return _.isUndefined(a)||(a=a.replace(b,"")),parseFloat(a).toFixed(2)}};angular.module("AngularDynamicForm").service("DynamicFormFieldsetService",a)}(),function(){var a=function(a,b,c){var d=this;
a.search_query="",this.search_result,this.selected_product,this.new_pin=a.model[a.field.name]?"* * * *":"",this.google_place=a.model.google_place,a.datepicker_format="dd-MM-yyyy",this.onChange=function(b,d){_.isUndefined(d)&&_.isUndefined(b)&&(b=d),a.field.validate&&(a.errors=c.validateField(a.model,a.field.name),a.show_validation=!0)},this.onBlur=function(){a.field.validate&&(a.errors=c.validateField(a.model,a.field.name),a.show_validation=!0)},this.arrayContains=function(a,b,c){if(_.isUndefined(c))return _.contains(a,b);var d=!1;return _.forEach(a,function(a){a[c]===b&&(d=!0)}),d},this.onGooglePlaceToggle=function(){this.google_place_manual=!this.google_place_manual,this.google_place_manual&&(a.model.google_place="")},this.onGooglePlaceClick=function(){this.google_place=null},this.onGooglePlaceSelect=function(b){a.model.google_place=b.place_id,a.field.query=b.formatted,this.google_place=b},this.onModelSearchSelectSelect=function(b){_.has(b,"id")&&!_.isUndefined(b.id)&&a.field.model.view(_.parseInt(b.id)).then(function(b){_.isArray(a.model[a.field.name])||(a.model[a.field.name]=[]),_.includes(_.pluck(a.model[a.field.name],"id"),b.data.id)||a.model[a.field.name].push(b.data)})},this.generateNewPin=function(a,b){b.model.api("generateNewPin").then(function(c){b[a]=c.data.data,d.new_pin=c.data.data,d.new_pin_generated=!0})}};a.$inject=["$scope","$timeout","DynamicFormService"],angular.module("AngularDynamicForm").controller("DynamicFormFieldsetCtrl",a)}(),function(){var a=function(){return{restrict:"E",scope:{field:"=",model:"=",errors:"=",show_validation:"=showValidation",edit_state:"=editState",has_validation_feedback:"=hasValidationFeedback",has_required_indicator:"=hasRequiredIndicator",has_help_messages:"=hasHelpMessages",show_label:"=showLabel",horizontal:"="},controller:"DynamicFormFieldsetCtrl as ctrl",replace:!0,link:function(a,b){b.addClass("dynamic-form-fieldset")},templateUrl:"views/dynamic-form-fieldset.html?v="+Math.random()}};a.$inject=[],angular.module("AngularDynamicForm").directive("dynamicFormFieldset",a)}();
//# sourceMappingURL=angular-dynamic-form.tmpl.min.js.map