/*!
 * angular-dynamic-form v0.7.0
 * http://intellipharm.com/
 *
 * Copyright 2015 Intellipharm
 *
 * 2016-08-23 08:58:52
 *
 */
!function(){"use strict";
//----------------------------------
// Angular Dynamic Form
//----------------------------------
angular.module("AngularDynamicForm",["angular.filter"])}(),function(){"use strict";
//----------------------------------
// DynamicForm Settings
//----------------------------------
var a="AngularDynamicForm: ";angular.module("AngularDynamicForm").value("AngularDynamicFormCustomInputViewUrl","views/inputs/").constant("DYNAMIC_FORM_EVENTS",{init:"dynamic-form:init",valid:"dynamic-form:valid",invalid:"dynamic-form:invalid",saveSuccess:"dynamic-form:process-success",saveError:"dynamic-form:process-error",submit:"dynamic-form:submit",validate:"dynamic-form:validate",onSuccess:"dynamic-form:on-success",onError:"dynamic-form:on-error"}).constant("MESSAGE_EXTERNAL_METHOD_ERROR",a+"Custom method must handle its own errors").constant("MESSAGE_EXTERNAL_METHOD_INVALID_RETURN",a+"Custom method must return either Boolean value or Promise").constant("MESSAGE_INVALID_STEP",a+"Invalid step").constant("MESSAGE_UNRECOGNISED_STEP_NAME",a+"Unrecognised step name").constant("MESSAGE_INVALID_CONFIG",a+"Invalid config").constant("MESSAGE_INVALID_FIELDS_OBJECT",a+"Invalid fields object").constant("MESSAGE_INVALID_OPTIONS_ARRAY",a+"Invalid options array").constant("MESSAGE_INVALID_OPTIONS_OBJECT",a+"Invalid options object").constant("MESSAGE_UNRECOGNISED_CONFIG_NAME",a+"Unrecognised config name").constant("MESSAGE_INVALID_MODEL_METHOD",a+"Invalid model method")}(),function(){"use strict";
//----------------------------------
// Dynamic Form Controller
//----------------------------------
var a=function(a,b,c,d,e,f,g,h){var i=this,j=b.api||{};
// control
b.is_submitting=b.form_config.auto_submit,b.submit_step=null,b.show_buttons=b.is_submitting,b.has_submitted=!1;var k=["model"],l=!1;
// defaults
this.default_submit_steps=["validate","save"],
// messaging
b.message={},b.message_state={success:!1,error:!1},
/////////////////////////////////////////////////////
//
// handlers
//
/////////////////////////////////////////////////////
/**
         * onCancel
         */
this.onCancel=function(){_.isUndefined(b.onCancel)||b.onCancel("")},/**
         * onClear
         */
this.onClear=function(){
// clear model data
_.forEach(b.model,function(a,c){
// if not in dont_clear_fields
_.contains(k,c)||(b.model[c]=void 0)},this),_.isUndefined(b.onClear)||b.onClear("")},/**
         * onFieldBlur
         */
this.onFieldBlur=function(a){
// clear errors
_.has(b.errors,a.name)&&(b.errors[a.name]=[]),
// custom blur handler
_.isUndefined(b.onBlur)||b.onBlur({model:b.model,field:a})},/**
         * onFieldKeypress
         */
this.onFieldKeypress=function(a,c){
// custom change handler
_.isUndefined(b.onKeypress)||b.onKeypress({$event:a,field:c,model:b.model})},/**
         * onFieldChange
         */
this.onFieldChange=function(a){
// clear errors
_.has(b.errors,a.name)&&(b.errors[a.name]=[]),
// custom change handler
_.isUndefined(b.onChange)||b.onChange({model:b.model,field:a}),
// show button on change
b.form_config.show_buttons_on_change&&(b.show_buttons=!0)},/**
         * onSubmit
         */
this.onSubmit=function(){
// get submit steps
var a=_.isUndefined(b.submit_steps)?this.default_submit_steps:b.submit_steps;return b.is_submitting=!0,c(function(c,d){
// call submit service
h.handleSubmit(a,b.model,b.form_config).then(
// complete
function(a){b.has_submitted=!0,
// custom complete handler
_.isUndefined(b.onSubmitComplete)||b.onSubmitComplete(a),b.is_submitting=!1,b.$emit(e.onSuccess,a),c(a)},
// error
function(a){b.has_submitted=!0,
// custom error handler
_.isUndefined(b.onError)||b.onError(a),b.is_submitting=!1,b.$emit(e.onError,a),d(a)},
// updates (messaging)
function(a){
// emit event (if recognised step)
switch(b.has_submitted=!0,
// set errors
"error"===a.message_state?b.errors=a.data:_.forEach(b.errors,function(a,c){b.errors[c]=[]}),
// show message
_.isUndefined(a.message)||i.showMessage(a.message_state,a.message),a.step){case"validate":
// custom after validate handler
_.isUndefined(b.onAfterValidate)||b.onAfterValidate({response:a}),
// broadcast events
"success"===a.message_state?b.$emit(e.valid,a):b.$emit(e.invalid,a);break;case"save":
// custom after save handler
_.isUndefined(b.onAfterSave)||b.onAfterSave({response:a}),
// broadcast events
"success"===a.message_state?b.$emit(e.saveSuccess,a):b.$emit(e.saveError,a)}})})},
/////////////////////////////////////////////////////
//
// init
//
/////////////////////////////////////////////////////
/**
         * init
         * called when model is ready (if $s.auto_init is not set to false)
         */
this.init=function(a){if(_.isUndefined(a)&&(a=!1),
// transform configs
b.form_config=g.transformConfig("form",b.form_config),b.form_style_config=g.transformConfig("form_style",b.form_style_config),b.form_field_config=g.transformConfig("form_field",b.form_field_config),
// transform fields
b.fields_array=f.transformFields(b.fields,b.form_config,b.model),
// if groups
b.has_groups&&(
// transform group fields
b.grouped_fields_array=f.transformGroupFields(b.fields_array,b.groups_config)),b.form_config.populate_model_from_url_parameters){var c=d.search();_.forEach(b.fields_array,function(a){_.has(c,a.name)&&_.set(b.model,a.name,c[a.name])})}
// auto submit
b.form_config.auto_submit&&(b.form_config.auto_submit=!1,this.onSubmit()),
// show button on change
b.form_config.show_buttons_on_change||(b.show_buttons=!0),
// external handler
_.isUndefined(b.onInit)||b.onInit(),l=!0,a&&b.$apply()},/**
         * update
         * called when fields property changes
         */
this.update=function(){if(_.isNull(b.model))return!0;
// transform fields
var a=f.transformFields(b.fields,b.form_config,b.model);
// if groups
if(b.fields_array&&b.fields_array.length>0?(_.remove(b.fields_array,function(b){return-1===_.indexOf(_.map(a,"name"),b.name)}),_.merge(b.fields_array,a)):b.fields_array=a,b.has_groups){
// transform group fields
var c=f.transformGroupFields(b.fields_array,b.groups_config);b.grouped_fields_array&&b.grouped_fields_array.length>0?(_.remove(b.grouped_fields_array,function(a){return-1===_.indexOf(_.map(c,"name"),a.name)}),_.forEach(c,function(a,c){c>=b.grouped_fields_array.length?b.grouped_fields_array[c]=a:a.name!==b.grouped_fields_array[c].name?b.grouped_fields_array[c]=a:_.merge(b.grouped_fields_array[c],a)})):b.grouped_fields_array=c}},
/////////////////////////////////////////////////////
//
// messaging
//
/////////////////////////////////////////////////////
/**
         * hideMessage
         */
this.hideMessage=function(){b.message={},_.forEach(b.message_state,function(a){a=!1})},/**
         * showMessage
         *
         * @param type
         * @param message
         */
this.showMessage=function(a,c){this.hideMessage(),b.message[a]=c,b.message_state[a]=!0};
/////////////////////////////////////////////////////
//
// watchers
//
/////////////////////////////////////////////////////
//-----------------------------------
// model
//-----------------------------------
var m=b.$watch("model",function(a){!_.isUndefined(a)&&a&&b.auto_init!==!1&&(i.init(),m())});
//-----------------------------------
// fields
//-----------------------------------
b.$watch("fields",function(a){!_.isUndefined(a)&&l&&i.update()},!0),
//-----------------------------------
// groups
//-----------------------------------
b.$watch("groups_config",function(a){!_.isUndefined(a)&&l&&i.update()},!0),
/////////////////////////////////////////////////////
//
// events
//
/////////////////////////////////////////////////////
//--------------------------------------------------------
// events
//--------------------------------------------------------
//-----------------------------------
// submit (force submit)
// TODO: remove when removed from Loyalty project
//-----------------------------------
b.$on(e.submit,function(a,c){_.has(c,"model")&&c.model!==b.model.model||i.onSubmit()}),
/////////////////////////////////////////////////////
//
// public API
//
/////////////////////////////////////////////////////
/**
         * init
         * @param refresh_scope
         */
j.init=function(a){"undefined"==typeof a&&(a=!0),i.init(a),m()},/**
         * submit
         */
j.submit=function(){return i.onSubmit()},/**
         * update
         */
j.update=function(){return i.update()},/**
         * set_property
         */
j.set_property=function(a,c){b[a]=c}};a.$inject=["$rootScope","$scope","$q","$location","DYNAMIC_FORM_EVENTS","AngularDynamicForm.transformers.FieldTransformer","AngularDynamicForm.transformers.ConfigTransformer","AngularDynamicForm.helpers.SubmitService"],angular.module("AngularDynamicForm").controller("DynamicFormCtrl",a)}(),function(){"use strict";var a=function(){return{restrict:"E",scope:{api:"=?",model:"=?",errors:"=?",fields:"=?",auto_init:"=?autoInit",form_config:"=?config",form_field_config:"=?fieldConfig",form_style_config:"=?styleConfig",groups_config:"=?groupsConfig",submit_steps:"=?submitSteps",onSubmitComplete:"&?",onCancel:"&?",onClear:"&?",onAfterSave:"&?",onAfterValidate:"&?",onError:"&?",onKeypress:"&?",onChange:"&?",onBlur:"&?",onInit:"&?"},controller:"DynamicFormCtrl as DynamicForm",templateUrl:"angular-dynamic-form/views/dynamic-form.html",link:function(a,b){b.addClass("dynamic-form"),
// set form template
_.isUndefined(a.groups_config)?(a.has_groups=!1,a.form_view_template="angular-dynamic-form/views/dynamic-form-no-groups.html"):(a.has_groups=!0,a.form_view_template="angular-dynamic-form/views/dynamic-form-groups.html")}}};a.$inject=[],angular.module("AngularDynamicForm").directive("dynamicForm",a)}(),function(){"use strict";
//----------------------------------
// Submit Service
//----------------------------------
var a=function(a,b,c,d,e){var f,g,h=this;
///////////////////////////////////////
//
// step handlers
//
///////////////////////////////////////
/**
         * handleSubmit
         *
         * @param steps
         * @param model
         * @param form_config
         * @returns Promise
         */
this.handleSubmit=function(b,c,d){var e=a.defer(),f={submit_complete:e.resolve,submit_update:e.notify,submit_error:e.reject};
// process
return h.handleSubmitSteps(0,b,c,d,f),e.promise},/**
         * handleSubmitSteps
         *
         * @param step
         * @param steps
         * @param model
         * @param form_config
         * @param handlers
         */
this.handleSubmitSteps=function(a,b,c,d,e,l){
// step is out of range
// default
// step is out of range
// resolve
// rejection
return a=_.isUndefined(a)?0:a,a>=b.length?void i(e,l):void h.handleSubmitStep(a,b,c,d).then(function(i){
// redefined model & form config
_.has(i,"model")&&(c=i.model),_.has(i,"form_config")&&(d=i.form_config),g=i,f="success",k("success",i,a,b,d,e),h.handleSubmitSteps(++a,b,c,d,e,i)},function(h){
// redefined model & form config
_.has(h,"model")&&(c=h.model),_.has(h,"form_config")&&(d=h.form_config),g=h,f="success",k("error",h,a,b,d,e),j(e,h)})};var i=function(a,b){
// call complete handler
_.isNull(a.submit_complete)||a.submit_complete(b)},j=function(a,b){
// call error handler
_.isNull(a.submit_error)||a.submit_error(b)},k=function(a,b,c,d,e,f){
// transform response if not an object
_.isObject(b)||(b={message:b}),
// get message from form config using step
c=_.isFunction(d[c])?"custom":d[c];var g;switch(c){case"validate":g="validation_"+a+"_message";break;case"save":g="save_"+a+"_message";break;default:g="custom_"+a+"_message"}var h={message_state:a,step:c};
// set message to form config message or response message
h.message=_.isNull(e[g])?b.message:e[g],
// data
h.data=_.has(b,"data")?b.data:{},
// send update
_.isNull(f.submit_update)||f.submit_update(h)};/**
         * handleSubmitStep
         *
         * @param step
         * @param steps
         * @param model
         * @param form_config
         * @returns Promise
         */
this.handleSubmitStep=function(b,e,i,j){return a(function(a,k){
// step is invalid
if(!_.isFunction(e[b])&&!_.isString(e[b]))throw new Error(d);
// step is a custom method
if(_.isFunction(e[b])){
// set args as last response if defined
var l;
// call external method with args;
return _.isUndefined(g)||_.isNull(g)||(_.isString(g)&&(g={message:g}),l=g,"object"==typeof l&&(l.type=f)),void c.callExternalMethod(e[b],l).then(a,k)}
// step is a string (internal method)
h.handleSubmitStepInternalMethod(b,e,i,j).then(a,k)})},/**
         * handleSubmitStepInternalMethod
         *
         * @param step
         * @param steps
         * @param model
         * @param form_config
         * @returns Promise
         */
this.handleSubmitStepInternalMethod=function(a,b,c,d){var f=b[a];
// invalid method
if(!_.has(h.internal_methods,f))throw new Error(e);
// call internal method
switch(f){case"validate":return h.internal_methods.validate(c,d);case"save":return h.internal_methods.save(c);default:return h.internal_methods[f]()}},
///////////////////////////////////////
//
// internal methods
//
///////////////////////////////////////
/**
         * save
         *
         * @param model
         * @returns Promise
         */
this.save=function(a){return c.callExternalMethod(a.save,[],a)},
///////////////////////////////////////
//
// init
//
///////////////////////////////////////
// set internal methods
this.internal_methods={validate:b.validate,save:this.save}};a.$inject=["$q","AngularDynamicForm.validation.ValidationService","AngularDynamicForm.helpers.ExternalCallService","MESSAGE_INVALID_STEP","MESSAGE_UNRECOGNISED_STEP_NAME"],angular.module("AngularDynamicForm").service("AngularDynamicForm.helpers.SubmitService",a)}(),function(){"use strict";
//----------------------------------
// External Call Service
//----------------------------------
var a=function(a,b,c){/**
         * callExternalMethod
         *
         * @param method
         * @param args
         * @param scope
         * @returns Promise
         */
this.callExternalMethod=function(d,e,f){return a(function(a,g){var h;
// call method and get response
try{
// TODO: start: is this the best way to do this?????
// here we call the method on the provided scope with provided args
h=_.isUndefined(f)?d(e):d.apply(f,e)}catch(i){throw console.log(i),new Error(b)}if(_.isUndefined(h))throw new Error(c);
// if method response is boolean value
if(h===!1||h===!0)h?a():g();else try{h.then(a,g)}catch(i){
// not a promise
// not a promise
throw i instanceof TypeError?new Error(c):(console.log(i),new Error(b))}})}};a.$inject=["$q","MESSAGE_EXTERNAL_METHOD_ERROR","MESSAGE_EXTERNAL_METHOD_INVALID_RETURN"],angular.module("AngularDynamicForm").service("AngularDynamicForm.helpers.ExternalCallService",a)}(),function(){"use strict";
//----------------------------------
// Validation Service
//----------------------------------
var a=function(a,b){/**
         * validate
         *
         * @param model
         * @param config
         * @returns {*}
         */
this.validate=function(d,e){return a(function(a,f){
// create validation field list
var g=c(d,e);
// call external method
b.callExternalMethod(d.validate,[g],d).then(a,f)})};/**
         * createValidationList
         *
         * @param model
         * @param config
         * @returns {Array}
         */
var c=function(a,b){var c=[];
//console.log(model);
//console.log(config);
//console.log(list);
// validation fields by inclusion (white list)
return _.isNull(b.validate_fields)?_.isNull(b.validate_fields_exclude)||_.forEach(a,function(a,d){_.include(b.validate_fields_exclude,d)||_.include(b.validate_fields,d)||c.push(d)}):c=b.validate_fields,c}};a.$inject=["$q","AngularDynamicForm.helpers.ExternalCallService"],angular.module("AngularDynamicForm").service("AngularDynamicForm.validation.ValidationService",a)}(),function(){"use strict";
//----------------------------------
// Config Transformer Service
//----------------------------------
var a=function(a){var b={auto_submit:!1,// use when you need to auto submit form (eg. after redirect)
label_camelcase:!0,label_replace_underscores:!0,show_buttons_on_change:!1,show_error_messages:!0,show_success_messages:!0,show_submit_button:!0,show_cancel_button:!1,show_clear_button:!1,submit_button_label:"SUBMIT",cancel_button_label:"CANCEL",clear_button_label:"CLEAR",validate_fields:null,validate_fields_exclude:null,validation_error_message:null,validation_success_message:null,save_error_message:null,save_success_message:null,custom_error_message:null,custom_success_message:null,populate_model_from_url_parameters:!1},c={has_messages:!0,has_groups:!0,show_labels:!0,show_right_labels:!0,has_validation_feedback:!0,has_required_indicator:!0},d={button_box_class:"",cancel_button_class:"",clear_button_class:"",field_error_message_box_class:"",// dynamic -> dynamic_style_config.field_error_message_box_class
field_error_message_box_no_label_class:"",// dynamic -> dynamic_style_config.field_error_message_box_class
fieldset_class:"",form_class:"",input_box_class:"",// dynamic -> dynamic_style_config.input_box_class
input_box_no_label_class:"",// dynamic -> dynamic_style_config.input_box_class
input_class:"",is_submitting_icon:"",label_class:"",message_box_class:"",message_error_class:"",message_success_class:"",required_indicator_class:"",
// right_label_class:              '', // ???
submit_button_class:"",validation_feedback_class:""};this.config={form:b,form_field:c,form_style:d},/**
        * transformConfig
        *
         * @param name
         * @param extension
         * @returns {}
         */
this.transformConfig=function(b,c){if(!_.has(this.config,b))throw new Error(a);return _.merge(_.clone(this.config[b]),c)}};a.$inject=["MESSAGE_UNRECOGNISED_CONFIG_NAME"],angular.module("AngularDynamicForm").service("AngularDynamicForm.transformers.ConfigTransformer",a)}(),function(){"use strict";
//----------------------------------
// Field Transformer Service
//----------------------------------
var a=function(a,b,c,d){var e=["label_camelcase","label_replace_underscores"],f=["type"],g=["label","value"],h={text:{type:"text",required:!1},textarea:{type:"textarea",required:!1},currency:{type:"currency",symbol:"$",required:!1},password:{type:"password",required:!1},checkbox:{type:"checkbox",required:!1},select:{type:"select",options:[],required:!1},multi_select:{type:"select",options:[],size:4,required:!1}};
//----------------------------------
// public
//----------------------------------
/**
        * transformFields
        *
         * @param fields
         * @param config
         * @param model
         * @returns []
         */
this.transformFields=function(c,d,g){var h=[];
// validate config
if(0!==_.difference(e,_.keys(d)).length)throw new Error(a);
// process form field by type property
return _.forEach(c,function(a,c){
// validate field object
if(0!==_.difference(f,_.keys(a)).length)throw new Error(b);
// transform field
var e=i(a,c,d,g[c]);
// add to array
h.push(e)}),h},/**
         * transformGroupFields
         *
         * @param fields_array
         * @param config
         * @returns {Array}
         */
this.transformGroupFields=function(a,b){var c=[];
// add group to each field
// sort (by group_order)
return _.forEach(a,function(a){var d=1;_.forEach(b,function(b,e){_.forEach(b.fields,function(f,g){if(f===a.name){
// clone field
var h=_.clone(a);
// add field group properties
h.group_label=b.label,h.group_key=e,_.has(b,"order")&&(d=b.order),h.group_order=d,h.order=g,
// add to array
c.push(h)}
// sort (by order)
c=_.sortBy(c,"order")},this),d++},this)},this),c=_.sortBy(c,"group_order")};
//----------------------------------
// private
//----------------------------------
/**
         * transformField
         *
         * @param item
         * @param key
         * @param config
         * @param model
         */
var i=function(a,b,e){//, model) {
var f={};
// if a recognised field type
if(_.has(h,a.type)){
// validate options array
if(_.has(a,"options")){
// if not an array
if(!_.isArray(a.options))throw new Error(c);_.forEach(a.options,function(a){
// validate option object
if(0!==_.difference(g,_.keys(a)).length)throw new Error(d)})}
// extend default
var i=_.cloneDeep(h[a.type]);
// merge defaults with item
f=_.merge(i,a)}else f=_.clone(a);
// add extra field properties
return f.hide_label?(f.label="",f.hide_label=!0):_.has(f,"label")||(f.label=j(b,e.label_camelcase,e.label_replace_underscores)),f.name=b,f.model=_.has(a,"model")?a.model:null,f.validate=!1,f},j=function(a,b,c){
// replace underscores
// camelcase
return c&&(a=a.replace(/\_/g," ")),b&&(a=_.startCase(a)),a}};a.$inject=["MESSAGE_INVALID_CONFIG","MESSAGE_INVALID_FIELDS_OBJECT","MESSAGE_INVALID_OPTIONS_ARRAY","MESSAGE_INVALID_OPTIONS_OBJECT"],angular.module("AngularDynamicForm").service("AngularDynamicForm.transformers.FieldTransformer",a)}(),function(){"use strict";
//----------------------------------
// Dynamic Form Fieldset Controller
//----------------------------------
var a=function(a){var b=this;a.dynamic_style_config={},/**
         * onBlur
         */
this.onBlur=function(){
// update model
_.set(a.model,a.field.name,a.value),
// external handler
_.isUndefined(a.onBlur)||a.onBlur({field:a.field})},/**
         * onKeypress
         */
this.onKeypress=function(b){_.isUndefined(a.onKeypress)||a.onKeypress({$event:b,field:a.field})},/**
         * onChange
         */
this.onChange=function(){
// update model (map & multi-select)
"map"===a.field.format&&"multi_select"===a.field.type&&_.forEach(a.field.options,function(b){_.set(a.model,b.value,_.indexOf(a.value,b.value)>=0)}),
// update model
_.set(a.model,a.field.name,a.value),
// external handler
_.isUndefined(a.onChange)||a.onChange({field:a.field})},
//----------------------------------
// init
//----------------------------------
"map"===a.field.format&&"multi_select"===a.field.type&&(a.value=[],_.forEach(a.field.options,function(b){a.model[b.value]&&a.value.push(b.value)}),_.set(a.model,a.field.name,a.value)),
//----------------------------------
// watchers
//----------------------------------
a.$watch("value",function(a){_.isUndefined(a)||(b.value=a)},!0),a.$watch("config.show_labels",function(b){if(!_.isUndefined(b)){if(b)return a.dynamic_style_config.input_box_class=a.style_config.input_box_class,void(a.dynamic_style_config.field_error_message_box_class=a.style_config.field_error_message_box_class);a.dynamic_style_config.input_box_class=a.style_config.input_box_no_label_class,a.dynamic_style_config.field_error_message_box_class=a.style_config.field_error_message_box_no_label_class}})};a.$inject=["$scope"],angular.module("AngularDynamicForm").controller("DynamicFormFieldsetCtrl",a)}(),function(){"use strict";var a=function(a,b){return{restrict:"E",scope:{field:"=?",model:"=?",allErrors:"=?",config:"=?",style_config:"=?styleConfig",show_validation:"=?showValidation",onKeypress:"&?",onChange:"&?",onBlur:"&?"},controller:"DynamicFormFieldsetCtrl as DynamicFormFieldset",replace:!0,link:function(c){function d(){var a=[c.style_config.fieldset_class];c.config.has_validation_feedback&&c.errors&&(a.push(c.style_config.fieldset_feedback_class),0===c.errors.length?a.push(c.style_config.fieldset_no_errors_class):a.push(c.style_config.fieldset_errors_class)),c.field.validate&&a.push(c.style_config.fieldset_required_class),c.fieldset_class=a.join(" ")}function e(){var a=[c.style_config.validation_feedback_class];c.errors&&(0===c.errors.length?a.push(c.style_config.validation_no_errors_class):a.push(c.style_config.validation_errors_class)),c.validation_feedback_class=a.join(" ")}c.errors=[],
// set input view template
c.input_view_template="angular-dynamic-form/views/inputs/"+c.field.type+".html",_.isUndefined(a.get(c.input_view_template))&&(c.input_view_template=b+c.field.type+".html"),
// watchers
c.$watchCollection("model",function(){_.isUndefined(c.model)||(c.value=_.get(c.model,c.field.name))}),c.$watchCollection("allErrors",function(){!_.isUndefined(c.allErrors)&&_.has(c.allErrors,c.field.name)&&(c.errors=_.get(c.allErrors,c.field.name),d(),e())}),c.$watchCollection("config",function(){_.isUndefined(c.style_config)||(d(),e())}),c.$watchCollection("style_config",function(){_.isUndefined(c.style_config)||(d(),e())})},templateUrl:"angular-dynamic-form/views/dynamic-form-fieldset.html"}};a.$inject=["$templateCache","AngularDynamicFormCustomInputViewUrl"],angular.module("AngularDynamicForm").directive("dynamicFormFieldset",a)}();
//# sourceMappingURL=angular-dynamic-form.min.js.map